import {BrowserEvent as EventsBrowserEvent} from './browserevent.js';
/**
 * @license
 * Copyright The Closure Library Authors.
 * SPDX-License-Identifier: Apache-2.0
 */

/**
 * @fileoverview This file contains a class for working with keyboard events
 */

/**
 * This class is used for the KeyEvent.EventType.KEY event and
 * it overrides the key code with the fixed key code.
 * @extends {EventsBrowserEvent}
 * @final
 */
class KeyEvent extends EventsBrowserEvent {

  /**
   * This class is used for the KeyEvent.EventType.KEY event and
   * it overrides the key code with the fixed key code.
   * @param {number} keyCode The adjusted key code.
   * @param {number} charCode The unicode character code.
   * @param {boolean} repeat Whether this event was generated by keyboard repeat.
   * @param {Event} browserEvent Browser event object.
   */
  constructor(keyCode, charCode, repeat, browserEvent) {
    super(browserEvent);
    this.type = KeyEvent.EventType.KEY;
  
    /**
     * Keycode of key press.
     * @type {number}
     */
    this.keyCode = keyCode;
  
    /**
     * Unicode character code.
     * @type {number}
     */
    this.charCode = charCode;
  
    /**
     * True if this event was generated by keyboard auto-repeat (i.e., the user is
     * holding the key down.)
     * @type {boolean}
     */
    this.repeat = repeat;
  }
}

/**
 * Enum type for the events fired by the key handler
 * @enum {string}
 */
KeyEvent.EventType = {
  KEY: 'key'
};

export {KeyEvent};